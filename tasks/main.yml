- name: Configuring nginx
  import_tasks: "nginx.yml"

- name: ensure "{{name}}" user exists
  user:
    name: "{{name}}"
    group: www-data
    generate_ssh_key: True
    system: False


- name: "Add README.md to {{name}}'s home dir"
  template:
    src: README.md
    dest: ~{{name}}/README.md

- name: ensure {{name}} user can manage own systemd unit files
  command: loginctl enable-linger {{name}}

- name: Make sure default home folders exist.
  become: True
  become_user: "{{name}}"
  file:
    path: "~{{name}}/{{item}}"
    recurse: True
    state: directory
    mode: 0750
  with_items: 
    - www
    - logs
    - fallback
    - .config/systemd/user/

- name: Make publickey available at <yoursite>/~{{name}}/id_rsa.pub
  file:
    src: '~{{name}}/.ssh/id_rsa.pub'
    dest: '~{{name}}/www/id_rsa.pub'
    state: hard

- name: Register publickey
  command: cat '~{{name}}/.ssh/id_rsa.pub'
  register: pubkey

- name: Print publickey
  debug: msg="{{pubkey.stdout}}"

- name: Pull latest git
  become: True
  become_user: "{{name}}"
  git:
    accept_hostkey: True
    force: True
    repo: "{{source}}"
    version: "{{branch}}" #Defaults to `master`
    dest: "~{{name}}/app"
  when: source != None

- name: Ensure {{name}} postgresql database exists
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{name}}"

- name: Ensure database user exists
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{name}}"
    name: "{{name}}"
    password: "{{lookup('password', 'data/{{name}}_postgresPassword.txt length=32')}}"
    priv: "CONNECT/ALL"

- name: Running {{type}} specific setup
  include_tasks: "app/{{type}}.yml"
  when: type

- name: Run misc commands
  command: "{{item}}"
  args:
    chdir: ~{{name}}/
  become: True
  become_user: "{{name}}"
  with_items: "{{commands}}"

- name: Register {{domain}} domain name for setup later
  set_fact:
    domains: "{{domains}}+{{[(domain,name)]}}"
  when: domain

- name: create systemd services for uwsgi app
  become: True
  become_user: "{{name}}"
  template:
    src: "{{item}}"
    dest: ~{{name}}/.config/systemd/user/{{item}}
  with_items:
    - app.service
    - socket.service

- name: Register uid of "{{name}}"
  command: id -u {{name}}
  register: uid

- name: Enable systemd services for uwsgi app
  become: True
  become_user: "{{name}}"

  with_items:
    - app.service
#    - socket.service
  systemd:
    daemon_reload: True
    name: "{{item}}"
    enabled: True
    user: True
    state: restarted
  environment:
    XDG_RUNTIME_DIR: /run/user/{{uid.stdout}}
