- name: Configuring nginx
  import_tasks: "nginx.yml"

- name: ensure {{name}} user exists
  user:
    name: "{{name}}"
    group: www-data
    generate_ssh_key: True
    system: False

- name: "Add README.md to {{name}}'s home dir"
  template:
    src: README.md
    dest: ~{{name}}/README.md

- name: ensure {{name}} user can manage own systemd unit files
  command: loginctl enable-linger {{name}}

- name: Make sure default home folders exist.
  become: True
  become_user: "{{name}}"
  file:
    path: "~{{name}}/{{item}}"
    recurse: True
    state: directory
    mode: 0750
  with_items: 
    - www
    - logs
    - fallback
    - .config/systemd/user/

- name: Pull latest git
  become: True
  become_user: "{{name}}"
  git:
    repo: "{{source}}"
    version: "{{branch}}" #Defaults to `master`
    dest: "~{{name}}/app"
  when: source

- name: Ensure {{name}} postgresql database exists
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{name}}"

- name: Ensure database user exists
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{name}}"
    name: "{{name}}"
    password: "{{lookup('password', '~'+name+'/postgresPassword.txt length=32')}}"
    priv: "CONNECT/ALL"

- name: template "ansible_*" files in source tree
  become: True
  become_user: "{{name}}"
  template:
    src: '{{ item.src }}'
    dest: '{{ item.path.lstrip("ansible_") }}'
    mode: '{{ item.mode }}'
  when: item.state == 'file' and item.path.startsswith("ansible_")
  with_filetree: "~{{name}}/app"

- name: Running {{type}} specific setup
  include_tasks: "app/{{type}}.yml"
  when: type

- name: Run misc commands
  chdir: ~{{name}}/
  command: "{{item}}"
  become: True
  become_user: "{{name}}"
  with_items: "{{commands}}"

- name: Register {{domain}} domain name for setup later
  set_fact:
    domains: "{{domains}}+{{[(domain,name)]}}"
  when: domain

- name: create systemd services for uwsgi app
  become: True
  become_user: "{{name}}"
  template:
    src: "{{item}}"
    dest: ~{{name}}/.config/systemd/user/{{item}}
  with_items:
    - app.service
    - socket.service

- name: Enable systemd services for uwsgi app
  become: True
  become_user: "{{name}}"
  with_items:
    - app.service
    - socket.service
  systemd:
    name: "{{item}}"
    enabled: True
    user: True
  environment:
    XDG_RUNTIME_DIR: /run/user/{{lookup('pipe', 'id -u '+name)}}
